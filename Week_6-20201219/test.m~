clear all
N = 40;
h = 1./N;
k =h;
T =0.2;
x = 0:h:1;
t = 0:k:T;

A= (2/h^2)*diag(ones(N-1,1)) - (1/h^2)*diag(ones(N-2,1),1)...
 - (1/h^2)*diag(ones(N-2,1),-1);
b = ones((N-1),1);

% boundary u_n0=sin(pi x)+1/2x(1-x)
u=zeros(length(x),length(t));
u(:,1) = sin(pi.*x)+1/2*x.*(1-x);
% inital value
u(1,:)=0;
u(end,:)=0;
%% Forward Eular
for m=1:length(t)-1
   u(2:end-1,m+1) = u(2:end-1,m)+k*(-A*u(2:end-1,m)+b);
end
plot(t,u(3,:))
xlabel('t')
ylabel('u')
% zlabel('u')
%% Backward Eular
% rearrange equation so that RHS is about u_n
I = eye(size(A));

for m = 2:length(t)
    u(2:end-1,m) = (I+k*A)\(u(2:end-1,m-1)+k*b);
end
%% Crank-Nicoslon
I = eye(size(A));

for m = 1:length(t)-1
    u(2:end-1,m+1) = (I+0.5*k*A)\((I-0.5*k*A)*u(2:end-1,m)+k*b);
end
